# This workflow builds and pushes Docker images for the simulators that have
# been modified when a PR is done. 
# The first job detects the modified simulators. It inspects the repository to
# determine all the changed dockerfiles, using the github action changed-files.
# The second job uses the output of the first and runs with a matrix strategy,
# building and pushing the modified simulators to Docker Hub in parallel, each
# in its own job.
# If the running time of the workflow becomes a problem, it could be possible
# to incorporate caching of the Docker build process in the GitHub actions.
name: Build and push simulator Docker images
on:
  # On any PR we will save the docker images as -dev on docker hub
  pull_request:
    branches-ignore:
      - main
  # When we merge into main we need to run this on push otherwise we would
  # never have the prod images on docker hub.
  push:
    branches:
      - main

jobs:
  generate-simulator-matrix:
    runs-on: Linux_x64_8cores
    outputs:
      simulator-dockerfile-paths: ${{ steps.unique-changed-dockerfiles.outputs.all_unique_changed_simulators_json_array }}

    steps:
      # fetch-depth is set to 2 to ensure that the two last commits are
      # available to the script that will generate the simulator matrix.
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # Example: https://github.com/tj-actions/changed-files/blob/main/.github/workflows/matrix-example.yml
      - name: Get all changed dockerfiles
        id: changed-dockerfiles
        uses: tj-actions/changed-files@v43
        with:
          files: |
             simulators/**/*
      - name: Echo changed files
        run: |
          echo "all_changed_files=${{ steps.changed-dockerfiles.outputs.all_changed_files }}"
        
      - name: Removed duplicated paths
        id: unique-changed-dockerfiles
        # Remove duplicated paths if multiple files in the same directory have changed
        run: |
          : # Get unique changed simulators
          unique_changed_simulators=($( \
            echo "${{ steps.changed-dockerfiles.outputs.all_changed_files }}" | \
            sed s'/ /\n/g' | \
            cut -d '/' -f1-3 | \
            sort | \
            uniq))
          
          : # Convert bash array to JSON array and adds Dockerfile to each element
          json_array="["
          for ((i = 0; i < ${#unique_changed_simulators[@]}; i++)); do
              json_array+="\"${unique_changed_simulators[i]}/Dockerfile\""
              : # if i less than the last index, add a comma
              if [[ $i -lt $(( ${#unique_changed_simulators[@]} - 1 )) ]]; then
                  json_array+=", "
              fi
          done
          json_array+="]"
          
          echo "$json_array"
          
          echo "all_unique_changed_simulators_json_array=${json_array[@]}" >> $GITHUB_OUTPUT

  publish-simulator-image:
    runs-on: Linux_x64_8cores
    needs: generate-simulator-matrix
    if: ${{ needs.generate-simulator-matrix.outputs.simulator-dockerfile-paths != '' && needs.generate-simulator-matrix.outputs.simulator-dockerfile-paths != '[]' }}
    strategy:
      # If building one simulator fails, continue with the others anyway.
      fail-fast: false

      matrix:
        simulator-dockerfile-path: ${{ fromJSON(needs.generate-simulator-matrix.outputs.simulator-dockerfile-paths) }}

    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          # this might remove tools that are actually needed,
          # if set to "true" but frees about 6 GB
          tool-cache: false
          
          # all of these default to true, but feel free to set to
          # "false" if necessary for your workflow
          android: true
          dotnet: true
          haskell: true
          
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get simulator name, version, directory and environment
        id: get
        run: | 
          : # Get Simulator name
          : # /some/path/to/simulator/version/Dockerfile -> simulator
          tmp=$(basename $(dirname $(dirname ${{ matrix.simulator-dockerfile-path }})))
          echo "simulator-name=$tmp" >> $GITHUB_OUTPUT

          : # Get Simulator version
          : # /some/path/to/simulator/version/Dockerfile -> version
          tmp=$(dirname ${{ matrix.simulator-dockerfile-path }})
          echo "simulator-version=$(basename $tmp)" >> $GITHUB_OUTPUT

          : # Get Simulation Directory
          echo "simulator-directory=$(dirname ${{ matrix.simulator-dockerfile-path }})" >> $GITHUB_OUTPUT

          : # Current environment 
          if [[ "${{ github.ref }}" != "refs/heads/main" ]]; then
            echo "environment=_dev" >> $GITHUB_OUTPUT
          fi

          cat $GITHUB_OUTPUT

      - name: Generate full image tag
        id: image-tag
        run: |
          echo "full_tag=${{ steps.get.outputs.simulator-name }}_${{ steps.get.outputs.simulator-version }}${{ steps.get.outputs.environment }}">> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT

      - name: Echo environment
        run: |
          echo "environment=${{ steps.get.outputs.environment }}"

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build and export to Docker
        uses: docker/build-push-action@v5
        with:
          context: ${{ steps.get.outputs.simulator-directory }}
          load: true
          file: ${{ matrix.simulator-dockerfile-path }}
          tags: |
             inductiva/kutu:${{ steps.image-tag.outputs.full_tag }}
      - name: Test docker image
        run: |
          docker run --rm inductiva/kutu:${{ steps.image-tag.outputs.full_tag }} /home/test_sim.sh

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          tags: |
            inductiva/kutu:${{ steps.image-tag.outputs.full_tag }}
          context: ${{ steps.get.outputs.simulator-directory }}
          file: ${{ matrix.simulator-dockerfile-path }}
          push: true
          labels: |
            org.opencontainers.image.source=https://github.com/inductiva/kutu
            maintainer=Inductiva Research Labs <contact@inductiva.ai>
            org.opencontainers.image.revision=$GITHUB_SHA